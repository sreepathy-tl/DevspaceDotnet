version: v2beta1
name: aspnetapp

# This is a list of `pipelines` that DevSpace can execute (you can define your own)
pipelines:
  # This is the pipeline for the main command: `devspace dev` (or `devspace run-pipeline dev`)
  dev:
    run: |-
      run_dependencies --all       # 1. Deploy any projects this project needs (see "dependencies")
      ensure_pull_secrets --all    # 2. Ensure pull secrets
      create_deployments --all     # 3. Deploy Helm charts and manifests specfied as "deployments"
      start_dev app                # 4. Start dev mode "app" (see "dev" section)
  # You can run this pipeline via `devspace deploy` (or `devspace run-pipeline deploy`)
  deploy:
    run: |-
      run_dependencies --all                            # 1. Deploy any projects this project needs (see "dependencies")
      ensure_pull_secrets --all                         # 2. Ensure pull secrets
      build_images --all -t $(git describe --always)    # 3. Build, tag (git commit hash) and push all images (see "images")
      create_deployments --all                          # 4. Deploy Helm charts and manifests specfied as "deployments"

# This is a list of `images` that DevSpace can build for this project
# We recommend to skip image building during development (devspace dev) as much as possible
images:
  app:
    image: localhost:8432/fs-dotnet:v1
    dockerfile: ./Dockerfile

# This is a list of `deployments` that DevSpace can create for this project
deployments:
  app:
    # This deployment uses `helm` but you can also define `kubectl` deployments or kustomizations
    helm:
      # We are deploying this project with the Helm chart you provided
      chart:
        name: ./Charts
      # Under `values` we can define the values for this Helm chart used during `helm install/upgrade`
      # You may also use `valuesFiles` to load values from files, e.g. valuesFiles: ["values.yaml"]
      values:
        someChartValue: ""

# This is a list of `dev` containers that are based on the containers created by your deployments
dev:
  app:
    # Search for the container that runs this image
    imageSelector: localhost:8432/fs-dotnet:v1
    # Replace the container image with this dev-optimized image (allows to skip image building during development)
    devImage: localhost:8432/fs-dotnet:v1
    # Sync files between the local filesystem and the development container
    sync:
      - path: ./aspnetapp/:/source
      - path: ./devspace_start.sh:/source/devspace_start.sh
    # Open a terminal and use the following command to start it
    terminal:
      command: ./devspace_start.sh
    # Inject a lightweight SSH server into the container (so your IDE can connect to the remote dev env)
    ssh:
      enabled: true
    # Make the following commands from my local machine available inside the dev container
    proxyCommands:
      - command: devspace
      - command: kubectl
      - command: helm
      - gitCredentials: true
    # Forward the following ports to be able access your application via localhost
    ports:
      - port: "5186"
      - port: "8000:5000"
    # Open the following URLs once they return an HTTP status code other than 502 or 503
    open:
      - url: http://localhost:8000

# Use the `commands` section to define repeatable dev workflows for this project 
commands:
  setup-registry: |-
      echo "Setting up local registry on localhost:8432"
      docker run -d \
        -p 8432:5000 \
        --restart=always \
        --name registry \
        -v /mnt/registry:/var/lib/registry \
        registry:2
      echo "Registry setup completed"
  build-image:
    command: |-
      echo "Building the docker image and pushing to local registry"
      docker build -t localhost:8432/fs-dotnet:v1 . --no-cache
      docker push localhost:8432/fs-dotnet:v1
  helm-deploy:
    command: |-
      echo "Deploying your app with helm. This will just run the app without syncing changes."
      devspace purge
      helm install dotnetapp -n dotnet  ./Charts
      echo "Your app will be accessible from http://localhost:8000 in a few seconds"
  helm-delete:
    command: |-
      echo "This will purge your app installed with helm"
      helm delete dotnetapp -n dotnet
  migrate-db:
    command: |-
      echo 'This is a cross-platform, shared command that can be used to codify any kind of dev task.'
      echo 'Anyone using this project can invoke it via "devspace run migrate-db"'

# Define dependencies to other projects with a devspace.yaml
# dependencies:
#   api:
#     git: https://...  # Git-based dependencies
#     tag: v1.0.0
#   ui:
#     path: ./ui        # Path-based dependencies (for monorepos)
